[{"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\index.js":"1","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\reportWebVitals.js":"2","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\App.js":"3","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\categories\\index.js":"4","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\index.js":"5","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\categories\\SubmitNeed.jsx":"6","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\Navigation.jsx":"7","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\Footer.jsx":"8","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\Account.jsx":"9","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\Contact.jsx":"10","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\About.jsx":"11","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\Home.jsx":"12","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\categories\\ViewNeeds.jsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":961,"mtime":1611691971986,"results":"17","hashOfConfig":"15"},{"size":172,"mtime":1610952710678,"results":"18","hashOfConfig":"15"},{"size":315,"mtime":1611691976557,"results":"19","hashOfConfig":"15"},{"size":9341,"mtime":1611691991067,"results":"20","hashOfConfig":"15"},{"size":3751,"mtime":1611688434423,"results":"21","hashOfConfig":"15"},{"size":498,"mtime":1611688434422,"results":"22","hashOfConfig":"15"},{"size":702,"mtime":1610736388156,"results":"23","hashOfConfig":"15"},{"size":702,"mtime":1610736388158,"results":"24","hashOfConfig":"15"},{"size":694,"mtime":1610736388158,"results":"25","hashOfConfig":"15"},{"size":1283,"mtime":1611688434423,"results":"26","hashOfConfig":"15"},{"size":4759,"mtime":1611691992240,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"cqmhe5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\index.js",[],["57","58"],"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\reportWebVitals.js",[],"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\App.js",[],"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\categories\\index.js",[],"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\index.js",[],"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\categories\\SubmitNeed.jsx",["59","60","61","62"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// Submit A need forum post.\r\nfunction SubmitNeed() {\r\n    const [name, setName] = useState(\"\")\r\n    const [postContent, setPostContent] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [category, setCategory] = useState(\"\")\r\n    const [amount, setAmount] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const needs = {\r\n            name,\r\n            postContent,\r\n            city,\r\n            category,\r\n            amount,\r\n            email,\r\n            phoneNumber\r\n        };\r\n        console.log(needs)\r\n        //linking axios to back end using json as temp.\r\n        axios.post(`http://localhost:3000/needs`, needs)\r\n            .then(res => {\r\n                console.log(res);\r\n                // console.log(res.data);\r\n            })\r\n\r\n            \r\n    }\r\n    \r\n\r\n    return (\r\n\r\n        <div className=\"submitneed\"  >\r\n            <div class=\"container\" >\r\n                {/* added axios styling */}\r\n                <div class=\"row align-items-center my-4\" style={{ display: 'flex', justifyContent: 'center', margin: 'auto'}}>\r\n                    <div class=\"col-lg-5\">\r\n                        <h1 class=\"font-weight-light mb-4\" style={{ display: 'flex', justifyContent: 'center', margin: 'auto'}}>Submit Need</h1>\r\n\r\n                        <form  onSubmit={handleSubmit} style={{ display: 'grid', justifyContent: 'center', margin: 'auto'}}>\r\n                            <label>\r\n            <TextField type=\"text\" name=\"name\" onChange={(e) => setName(e.target.value)} \r\n                                                id=\"outlined-text\"\r\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\r\n                                                label=\"Name\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                multiline\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\" \r\n                                                display=\"inline\"\r\n                                                />\r\n                            </label>\r\n                            <label>\r\n            <TextField type=\"text\" name=\"postContent\" onChange={(e) => setPostContent(e.target.value)} \r\n                                                id=\"outlined-text\"\r\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\r\n                                                label=\"Post Content\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                multiline\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\" \r\n                                                display=\"inline\"\r\n                                                />\r\n                            </label>\r\n                            <label>\r\n            <TextField type=\"text\" name=\"city\" onChange={(e) => setCity(e.target.value)} \r\n                                                id=\"outlined-text\"\r\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\r\n                                                label=\"City\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                multiline\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\" \r\n                                                display=\"inline\"\r\n                                                />\r\n                            </label>\r\n                            <label>\r\n            <TextField type=\"text\" name=\"category\" onChange={(e) => setCategory(e.target.value)} \r\n                                                id=\"outlined-text\"\r\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\r\n                                                label=\"Category\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                multiline\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\" \r\n                                                display=\"inline\"\r\n                                                />\r\n                            </label>\r\n                            <label>                         \r\n            <TextField inputProps={{className: 'digitsOnly' }}  name=\"amount\" onChange={(e) => setAmount(e.target.value)} \r\n                                                id=\"outlined-number\"\r\n                                                label=\"Amount\"\r\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                display=\"inline\"\r\n                                                size=\"small\"\r\n                                                type=\"number\"\r\n                                                \r\n                                                />\r\n                            </label>\r\n                            <label>\r\n            <TextField type=\"text\" name=\"email\" onChange={(e) => setEmail(e.target.value)} \r\n                                                id=\"outlined-text\"\r\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\r\n                                                label=\"Email\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                multiline\r\n                                                size=\"small\"\r\n                                                variant=\"outlined\" \r\n                                                display=\"inline\"\r\n                                                />\r\n                            </label>\r\n                            <label>                         \r\n            <TextField inputProps={{className: 'digitsOnly' }}  name=\"phoneNumber\" onChange={(e) => setPhoneNumber(e.target.value)} \r\n                                                id=\"outlined-number\"\r\n                                                label=\"Phone Number\"\r\n                                                style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }}\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                variant=\"outlined\"\r\n                                                display=\"inline\"\r\n                                                size=\"small\"\r\n                                                type=\"number\"\r\n                                                \r\n                                                />\r\n                            </label>\r\n                            \r\n\r\n                            {/* button to submit and redirect to viewneeds */}\r\n                            <Button id=\"submitButton\" type=\"submit\" variant=\"outlined\" color=\"primary\" size=\"small\"\r\n                            style={{display:\"flex\", flexDirection:\"row\", justifyContent: 'center', margin: 3 }} display=\"flex\"\r\n                            disableElevation display=\"inline\"  \r\n                            // onClick={event => window.location.href='/viewneeds'}\r\n                            >Add</Button>\r\n                        </form>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n\r\n}\r\n\r\n\r\nexport default SubmitNeed;\r\n","Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\Navigation.jsx",[],"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\Footer.jsx",[],"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\Account.jsx",[],"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\Contact.jsx",[],"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\About.jsx",[],"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\Home.jsx",[],"Z:\\Users\\Ethan\\Documents\\Bethel\\Final\\loaves-and-fishes-frontend-master\\src\\components\\categories\\ViewNeeds.jsx",["63"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n//from material UI\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\n\r\n// View A need post.\r\nfunction ViewNeeds() {\r\n    //added from material UI\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n\r\n//Axios - Gets need post from needs.json, hook up to back-end\r\n    const [needs, setNeeds] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:3000/needs\")\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.status === 200) {\r\n                    setNeeds(response.data);\r\n                }\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"viewneeds\">\r\n            <div class=\"container\">\r\n                <div class=\"row align-items-center my-4\" style={{ display: 'flex', justifyContent: 'center', margin: 'auto'}}>\r\n                    <div class=\"col-lg-5\">\r\n                        <h1 class=\"font-weight-light\" style={{ display: 'flex', justifyContent: 'center', margin: 5 }}>View Needs</h1>\r\n\r\n                        <ul>\r\n                            {\r\n                                needs.map(need => {\r\n\r\n                                    return (\r\n                                        <Card className={classes.root} variant=\"outlined\">\r\n                                            <CardContent>\r\n                                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                                    {need.name}\r\n                                                </Typography>\r\n                                                <Typography variant=\"h5\" component=\"h2\">\r\n                                                    {need.category}\r\n                                                </Typography>\r\n\r\n                                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                                    {'Description:'}\r\n                                                    <br />\r\n                                                    {need.postContent}\r\n\r\n                                                </Typography>\r\n\r\n                                                <Typography variant=\"body2\" component=\"p\">\r\n\r\n                                                    {'Location:'}\r\n                                                    <br />\r\n                                                    {need.city}\r\n\r\n                                                </Typography>\r\n                                                <br />\r\n                                                <Typography className={classes.pos} color=\"textSecondary\">\r\n\r\n                                                    {'Need Amount:'}\r\n                                                    <br />\r\n                                                    {need.amount}\r\n                                                </Typography>\r\n\r\n                                                <CardActions>\r\n                                                    <Button onClick={() => { alert(\"Name: \" + need.name + \"  Email: \" + need.email + \" Phone: \" + need.phoneNumber) }}>Help Meet This Need</Button>\r\n\r\n\r\n                                                </CardActions>\r\n\r\n  \r\n                                            \r\n      <CardActions disableSpacing>\r\n        <IconButton  aria-label=\"add to favorites\">\r\n       \r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        </CardActions>\r\n                                            </CardContent>\r\n                                        </Card>\r\n //onChange={(e)=>setFavorites(e.target.value)}\r\n //onSubmit={handleSubmit}\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </ul>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ViewNeeds;",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":13},{"ruleId":"68","severity":1,"message":"72","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":12},{"ruleId":"68","severity":1,"message":"73","line":7,"column":10,"nodeType":"70","messageId":"71","endLine":7,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":157,"column":46,"nodeType":"76","endLine":157,"endColumn":62},{"ruleId":"68","severity":1,"message":"77","line":34,"column":11,"nodeType":"70","messageId":"71","endLine":34,"endColumn":15},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Redirect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'bull' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]